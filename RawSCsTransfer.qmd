---
title: "Raw Single Colors Transfer"
format: html
---

```{r}
#| message: false
#| warning: false
library(dplyr)
library(purrr)
library(HEULog)
```

We first navigate to our experiment folder and check for AlphaBeta experiments currently present

```{r}
Linux <- file.path("/home", "david", "Desktop")
WindowsHome <- file.path("C:", "CytekbioExport", "FcsFiles",
"Experiments", "David Rach")
WindowsLab <- file.path("C:", "CytekbioExport", "FcsFiles",
"Experiments", "David Rach")
WindowsAurora <- file.path("C:", "CytekbioExport", "FcsFiles",
"Experiments", "David Rach")

OperatingSystem <- Sys.info()["sysname"]
if(OperatingSystem == "Linux"){OS <- Linux
} else if (OperatingSystem == "Windows"){
    if (Sys.info()["user"] == "12692"){
        OS <- WindowsHome
        } else if (Sys.info()["user"] == "drach"){
        OS <- WindowsLab
        } else if (Sys.info()["user"] == "Aurora"){
        OS <- WindowsAurora
    }
} else {stop("Not currently set up for BSD or Mac, sorry")}

Experiments <- list.files(OS, pattern="AB_", full.names=TRUE)
```

```{r}
#| eval: FALSE

# Setup for data folder and ProcessedExperiments.csv
IsDataPresent <- list.files(include.dirs=TRUE)
if (!any(IsDataPresent %in% "data")){dir.create("data")}
CSVFiles <- list.files("data", pattern="ProcessedExperiments_SCs.csv")

if (length(CSVFiles) == 0){
    ProcessedExperiments <- data.frame(Experiment="Test", Date="01-01-2000")
    filename <- "ProcessedExperiments_SCs.csv"
    StorageLocation <- file.path("data", filename)
    write.csv(ProcessedExperiments, StorageLocation, row.names=FALSE)
}
```

We then call to GitHub to check to see if any of these haven't been processed yet. 

```{r}
CSV <- paste(                                                
      "https://raw.githubusercontent.com",                  
      "DavidRach", "AlphaBeta",                   
      "main", "data", "ProcessedExperiments_SCs.csv",                              
      sep = "/"                                             
    ) 

Data <- read.csv(CSV, check.names=FALSE)
Data$Date <- lubridate::mdy(Data$Date)
AlreadyProcessed <- Data |> pull(Experiment)

TheseFolders <- basename(Experiments)
```


# And this is the portion that remains to be expanded on

```{r}
#| eval: FALSE
UpdatedData <- purrr::map(.x=TheseFolders, .f=ExperimentParsed, parsed=AlreadyProcessed, parentFolder=OS, Type="Raw", Samples="unstained")

UpdatedData <- UpdatedData[sapply(UpdatedData, is.data.frame)]

UpdatedData <- bind_rows(UpdatedData)
str(Data)

#flatten(UpdatedData) # Need to edit to extract from list to allow for updating
#unlist(purrr::flatten(UpdatedData))

NewlyProcessed <- bind_rows(Data, UpdatedData)
write.csv(NewlyProcessed, "data/ProcessedExperiments_AF.csv", row.names=FALSE)
```

```{r}
print("Go!")
```